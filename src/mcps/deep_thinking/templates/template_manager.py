"""
Template Manager for Deep Thinking Engine
"""

import re
import threading
from datetime import datetime
from pathlib import Path
from typing import Any, Dict, List, Optional


class ConfigurationError(Exception):
    """Configuration error"""

    pass


class TemplateManager:
    """Simple template manager with caching"""

    def __init__(self, templates_dir: str = "templates"):
        self.templates_dir = Path(templates_dir)
        self.cache: Dict[str, str] = {}
        self.metadata: Dict[str, Dict[str, Any]] = {}
        self.lock = threading.RLock()

        self.templates_dir.mkdir(exist_ok=True)
        self._create_builtin_templates()

    def _create_builtin_templates(self):
        """Create built-in templates"""
        templates = {
            # Add a placeholder for bias_detection
            "bias_detection": "# 认知偏见检测模板",
            # Add a placeholder for innovation
            "innovation": "# 创新思维模板",
            # Add a placeholder for reflection
            "reflection": "# 反思引导模板",
            "decomposition_high": """# 深度思考：系统性问题分解（高复杂度）

你是一位专业的系统思维专家，擅长将复杂问题分解为可管理的组成部分。请对以下问题进行系统性分解：

**主要问题**: {topic}
**复杂度**: 高
**关注重点**: {focus}
**领域背景**: {domain_context}

## 复杂度自适应分解策略：

### 【高复杂度分解策略】
请使用以下多维度分解方法：
1. **系统层次分解**：将问题分解为宏观、中观、微观三个层次
2. **时间维度分解**：分析短期、中期、长期的不同阶段
3. **利益相关者分解**：识别并分析所有关键利益相关者的视角
4. **因果链分解**：分析根本原因、中间因素和最终结果
5. **跨领域分解**：从技术、经济、社会、政治、环境等多个领域分析
6. **风险维度分解**：识别潜在风险、不确定性和边界条件
7. **矛盾分析**：识别问题中的核心矛盾和冲突点

请生成5-7个深度子问题，确保全面覆盖问题空间，并建立详细的关系图。

## 分解要求：
1. 每个子问题必须具体、明确、可独立分析
2. 子问题之间应尽量减少重叠，保持相对独立性
3. 子问题集合必须完整覆盖原问题的核心方面
4. 明确标注子问题之间的依赖关系和优先级
5. 为每个子问题提供精确的搜索关键词和预期分析角度

## JSON输出格式规范：
```json
{
  "main_question": "原始主问题的准确描述",
  "complexity_level": "high",
  "decomposition_strategy": "系统层次分解",
  "sub_questions": [
    {
      "id": "SQ1",
      "question": "子问题1的具体描述",
      "priority": "high/medium/low",
      "search_keywords": ["关键词1", "关键词2", "关键词3"],
      "expected_perspectives": ["视角1", "视角2", "视角3"],
      "analysis_dimensions": ["维度1", "维度2"]
    },
    {
      "id": "SQ2",
      "question": "子问题2的具体描述",
      "priority": "high/medium/low",
      "search_keywords": ["关键词1", "关键词2", "关键词3"],
      "expected_perspectives": ["视角1", "视角2", "视角3"],
      "analysis_dimensions": ["维度1", "维度2"]
    }
    // 更多子问题...
  ],
  "relationships": [
    {
      "from": "SQ1",
      "to": "SQ2",
      "type": "depends_on/influences/contradicts/supports",
      "description": "关系的具体描述"
    }
    // 更多关系...
  ],
  "coverage_analysis": {
    "key_aspects_covered": ["方面1", "方面2", "方面3"],
    "potential_blind_spots": ["盲点1", "盲点2"]
  }
}
```

## 输出验证检查清单：
1. JSON格式是否完全符合规范？
   - 确保所有引号、括号、逗号正确
   - 移除所有注释行（如 "// 更多子问题..."）
   - 检查所有字段名和值格式是否正确

2. 子问题数量是否符合复杂度要求？
   - 高复杂度：5-7个子问题

3. 每个子问题是否都有完整的属性？
   - id：唯一标识符（如SQ1, SQ2等）
   - question：完整清晰的问题描述
   - priority：优先级（high/medium/low）
   - search_keywords：至少3个搜索关键词
   - expected_perspectives：至少2个分析视角
   - analysis_dimensions：至少2个分析维度

4. 关系描述是否清晰准确？
   - 每个子问题至少与一个其他子问题建立关系
   - 关系类型正确（depends_on/influences/contradicts/supports）
   - 关系描述具体明确

5. 是否覆盖了问题的所有关键方面？
   - coverage_analysis部分完整填写
   - 至少识别3个关键覆盖方面
   - 至少识别2个潜在盲点

请开始系统性问题分解：""",

            "decomposition_medium": """# 深度思考：系统性问题分解（中等复杂度）

你是一位专业的系统思维专家，擅长将复杂问题分解为可管理的组成部分。请对以下问题进行系统性分解：

**主要问题**: {topic}
**复杂度**: 中等
**关注重点**: {focus}
**领域背景**: {domain_context}

## 复杂度自适应分解策略：

### 【中等复杂度分解策略】
请使用以下多角度分解方法：
1. **MECE分解法**：相互独立、完全穷尽的分类方式
2. **时间序列分解**：按照问题发展的时间顺序分解
3. **利益相关者分析**：从主要相关方的角度分解问题
4. **因果分析**：识别主要原因和结果链
5. **领域分类**：按照不同专业领域分类分析

请生成4-6个核心子问题，确保覆盖问题的主要方面。

## 分解要求：
1. 每个子问题必须具体、明确、可独立分析
2. 子问题之间应尽量减少重叠，保持相对独立性
3. 子问题集合必须完整覆盖原问题的核心方面
4. 明确标注子问题之间的依赖关系和优先级
5. 为每个子问题提供精确的搜索关键词和预期分析角度

## JSON输出格式规范：
```json
{
  "main_question": "原始主问题的准确描述",
  "complexity_level": "medium",
  "decomposition_strategy": "MECE分解法",
  "sub_questions": [
    {
      "id": "SQ1",
      "question": "子问题1的具体描述",
      "priority": "high/medium/low",
      "search_keywords": ["关键词1", "关键词2", "关键词3"],
      "expected_perspectives": ["视角1", "视角2", "视角3"],
      "analysis_dimensions": ["维度1", "维度2"]
    },
    {
      "id": "SQ2",
      "question": "子问题2的具体描述",
      "priority": "high/medium/low",
      "search_keywords": ["关键词1", "关键词2", "关键词3"],
      "expected_perspectives": ["视角1", "视角2", "视角3"],
      "analysis_dimensions": ["维度1", "维度2"]
    }
    // 更多子问题...
  ],
  "relationships": [
    {
      "from": "SQ1",
      "to": "SQ2",
      "type": "depends_on/influences/contradicts/supports",
      "description": "关系的具体描述"
    }
    // 更多关系...
  ],
  "coverage_analysis": {
    "key_aspects_covered": ["方面1", "方面2", "方面3"],
    "potential_blind_spots": ["盲点1", "盲点2"]
  }
}
```

## 输出验证检查清单：
1. JSON格式是否完全符合规范？
   - 确保所有引号、括号、逗号正确
   - 移除所有注释行（如 "// 更多子问题..."）
   - 检查所有字段名和值格式是否正确

2. 子问题数量是否符合复杂度要求？
   - 中等复杂度：4-6个子问题

3. 每个子问题是否都有完整的属性？
   - id：唯一标识符（如SQ1, SQ2等）
   - question：完整清晰的问题描述
   - priority：优先级（high/medium/low）
   - search_keywords：至少3个搜索关键词
   - expected_perspectives：至少2个分析视角
   - analysis_dimensions：至少2个分析维度

4. 关系描述是否清晰准确？
   - 每个子问题至少与一个其他子问题建立关系
   - 关系类型正确（depends_on/influences/contradicts/supports）
   - 关系描述具体明确

5. 是否覆盖了问题的所有关键方面？
   - coverage_analysis部分完整填写
   - 至少识别3个关键覆盖方面
   - 至少识别2个潜在盲点

请开始系统性问题分解：""",

            "decomposition_low": """# 深度思考：系统性问题分解（基础复杂度）

你是一位专业的系统思维专家，擅长将复杂问题分解为可管理的组成部分。请对以下问题进行系统性分解：

**主要问题**: {topic}
**复杂度**: 低
**关注重点**: {focus}
**领域背景**: {domain_context}

## 复杂度自适应分解策略：

### 【基础分解策略】
请使用以下基本分解方法：
1. **5W1H分析法**：What(是什么)、Why(为什么)、Who(谁)、When(何时)、Where(何地)、How(如何)
2. **问题分类法**：将问题按照类型或领域进行分类
3. **优先级分解**：按照重要性和紧急性分解问题

请生成3-5个关键子问题，确保清晰简洁地覆盖核心问题。

## 分解要求：
1. 每个子问题必须具体、明确、可独立分析
2. 子问题之间应尽量减少重叠，保持相对独立性
3. 子问题集合必须完整覆盖原问题的核心方面
4. 明确标注子问题之间的依赖关系和优先级
5. 为每个子问题提供精确的搜索关键词和预期分析角度

## JSON输出格式规范：
```json
{
  "main_question": "原始主问题的准确描述",
  "complexity_level": "low",
  "decomposition_strategy": "5W1H分析法",
  "sub_questions": [
    {
      "id": "SQ1",
      "question": "子问题1的具体描述",
      "priority": "high/medium/low",
      "search_keywords": ["关键词1", "关键词2", "关键词3"],
      "expected_perspectives": ["视角1", "视角2", "视角3"],
      "analysis_dimensions": ["维度1", "维度2"]
    },
    {
      "id": "SQ2",
      "question": "子问题2的具体描述",
      "priority": "high/medium/low",
      "search_keywords": ["关键词1", "关键词2", "关键词3"],
      "expected_perspectives": ["视角1", "视角2", "视角3"],
      "analysis_dimensions": ["维度1", "维度2"]
    }
    // 更多子问题...
  ],
  "relationships": [
    {
      "from": "SQ1",
      "to": "SQ2",
      "type": "depends_on/influences/contradicts/supports",
      "description": "关系的具体描述"
    }
    // 更多关系...
  ],
  "coverage_analysis": {
    "key_aspects_covered": ["方面1", "方面2", "方面3"],
    "potential_blind_spots": ["盲点1", "盲点2"]
  }
}
```

## 输出验证检查清单：
1. JSON格式是否完全符合规范？
   - 确保所有引号、括号、逗号正确
   - 移除所有注释行（如 "// 更多子问题..."）
   - 检查所有字段名和值格式是否正确

2. 子问题数量是否符合复杂度要求？
   - 基础复杂度：3-5个子问题

3. 每个子问题是否都有完整的属性？
   - id：唯一标识符（如SQ1, SQ2等）
   - question：完整清晰的问题描述
   - priority：优先级（high/medium/low）
   - search_keywords：至少3个搜索关键词
   - expected_perspectives：至少2个分析视角
   - analysis_dimensions：至少2个分析维度

4. 关系描述是否清晰准确？
   - 每个子问题至少与一个其他子问题建立关系
   - 关系类型正确（depends_on/influences/contradicts/supports）
   - 关系描述具体明确

5. 是否覆盖了问题的所有关键方面？
   - coverage_analysis部分完整填写
   - 至少识别3个关键覆盖方面
   - 至少识别2个潜在盲点

请开始系统性问题分解：""",

            "decomposition": """# 深度思考：系统性问题分解

你是一位专业的系统思维专家，擅长将复杂问题分解为可管理的组成部分。请对以下问题进行系统性分解：

**主要问题**: {topic}
**复杂度**: {complexity}
**关注重点**: {focus}
**领域背景**: {domain_context}

## 复杂度自适应分解策略：

请根据问题复杂度选择适当的分解策略：

### 高复杂度问题分解策略
适用于复杂、多维度、系统性问题，请使用以下多维度分解方法：
1. **系统层次分解**：将问题分解为宏观、中观、微观三个层次
2. **时间维度分解**：分析短期、中期、长期的不同阶段
3. **利益相关者分解**：识别并分析所有关键利益相关者的视角
4. **因果链分解**：分析根本原因、中间因素和最终结果
5. **跨领域分解**：从技术、经济、社会、政治、环境等多个领域分析
6. **风险维度分解**：识别潜在风险、不确定性和边界条件
7. **矛盾分析**：识别问题中的核心矛盾和冲突点

对于高复杂度问题，请生成5-7个深度子问题，确保全面覆盖问题空间，并建立详细的关系图。

### 中等复杂度问题分解策略
适用于中等复杂度问题，请使用以下多角度分解方法：
1. **MECE分解法**：相互独立、完全穷尽的分类方式
2. **时间序列分解**：按照问题发展的时间顺序分解
3. **利益相关者分析**：从主要相关方的角度分解问题
4. **因果分析**：识别主要原因和结果链
5. **领域分类**：按照不同专业领域分类分析

对于中等复杂度问题，请生成4-6个核心子问题，确保覆盖问题的主要方面。

### 基础复杂度问题分解策略
适用于相对简单、明确的问题，请使用以下基本分解方法：
1. **5W1H分析法**：What(是什么)、Why(为什么)、Who(谁)、When(何时)、Where(何地)、How(如何)
2. **问题分类法**：将问题按照类型或领域进行分类
3. **优先级分解**：按照重要性和紧急性分解问题

对于基础复杂度问题，请生成3-5个关键子问题，确保清晰简洁地覆盖核心问题。

## 分解要求：
1. 每个子问题必须具体、明确、可独立分析
2. 子问题之间应尽量减少重叠，保持相对独立性
3. 子问题集合必须完整覆盖原问题的核心方面
4. 明确标注子问题之间的依赖关系和优先级
5. 为每个子问题提供精确的搜索关键词和预期分析角度

## JSON输出格式规范：
```json
{
  "main_question": "原始主问题的准确描述",
  "complexity_level": "high/medium/low",
  "decomposition_strategy": "使用的分解策略名称",
  "sub_questions": [
    {
      "id": "SQ1",
      "question": "子问题1的具体描述",
      "priority": "high/medium/low",
      "search_keywords": ["关键词1", "关键词2", "关键词3"],
      "expected_perspectives": ["视角1", "视角2", "视角3"],
      "analysis_dimensions": ["维度1", "维度2"]
    },
    {
      "id": "SQ2",
      "question": "子问题2的具体描述",
      "priority": "high/medium/low",
      "search_keywords": ["关键词1", "关键词2", "关键词3"],
      "expected_perspectives": ["视角1", "视角2", "视角3"],
      "analysis_dimensions": ["维度1", "维度2"]
    }
    // 更多子问题...
  ],
  "relationships": [
    {
      "from": "SQ1",
      "to": "SQ2",
      "type": "depends_on/influences/contradicts/supports",
      "description": "关系的具体描述"
    }
    // 更多关系...
  ],
  "coverage_analysis": {
    "key_aspects_covered": ["方面1", "方面2", "方面3"],
    "potential_blind_spots": ["盲点1", "盲点2"]
  }
}
```

## 输出验证检查清单：
1. JSON格式是否完全符合规范？
   - 确保所有引号、括号、逗号正确
   - 移除所有注释行（如 "// 更多子问题..."）
   - 检查所有字段名和值格式是否正确

2. 子问题数量是否符合复杂度要求？
   - 高复杂度：5-7个子问题
   - 中等复杂度：4-6个子问题
   - 基础复杂度：3-5个子问题

3. 每个子问题是否都有完整的属性？
   - id：唯一标识符（如SQ1, SQ2等）
   - question：完整清晰的问题描述
   - priority：优先级（high/medium/low）
   - search_keywords：至少3个搜索关键词
   - expected_perspectives：至少2个分析视角
   - analysis_dimensions：至少2个分析维度

4. 关系描述是否清晰准确？
   - 每个子问题至少与一个其他子问题建立关系
   - 关系类型正确（depends_on/influences/contradicts/supports）
   - 关系描述具体明确

5. 是否覆盖了问题的所有关键方面？
   - coverage_analysis部分完整填写
   - 至少识别3个关键覆盖方面
   - 至少识别2个潜在盲点

请开始系统性问题分解：""",
            "evidence_collection": """# 深度思考：证据收集

你现在需要为以下子问题收集全面、可靠的证据：

**子问题**: {{sub_question}}
**搜索关键词**: {{keywords}}
**证据要求**: 多样化来源，高可信度
**复杂度**: {{complexity}}

## 搜索策略指导：

### 1. 多源证据搜索策略
- **学术来源**: 搜索学术论文、研究报告、学位论文、会议论文
- **权威机构**: 政府报告、国际组织数据、行业标准、官方统计
- **新闻媒体**: 主流媒体报道、深度调查、案例分析、专题报道
- **专家观点**: 行业专家访谈、专业博客、演讲记录、专栏文章
- **行业资料**: 行业报告、白皮书、市场分析、技术文档
- **社区讨论**: 专业论坛、问答平台、社交媒体讨论(谨慎使用)

### 2. 证据质量要求
- **可靠性**: 优先选择经过同行评审或官方发布的信息
- **时效性**: 注意信息的发布时间，优先使用最新数据，同时保留历史数据作为比较
- **权威性**: 评估来源的专业背景和声誉
- **多样性**: 确保来源在地理、观点、领域上的多样性
- **透明度**: 优先选择方法论和数据来源透明的信息
- **相关性**: 确保证据与子问题直接相关

## 执行步骤：

1. **关键词优化**:
   - 扩展原始关键词，形成更精确的搜索词组
   - 考虑使用专业术语和同义词
   - 针对不同来源类型调整关键词策略

2. **系统性搜索**:
   - 使用你的Web搜索能力执行多轮搜索
   - 每轮搜索使用不同的关键词组合
   - 确保覆盖所有主要来源类型
   - 记录搜索过程和结果数量

3. **证据评估与筛选**:
   - 对每个来源进行可信度评分(1-10分)
   - 评估信息的完整性和准确性
   - 筛选出最相关、最可靠的证据
   - 确保证据集的多样性和平衡性

4. **冲突检测与处理**:
   - 主动识别相互矛盾的信息
   - 分析冲突的可能原因(方法差异、样本差异、时间差异等)
   - 标记争议点和不确定性
   - 提供多方观点的平衡呈现

5. **证据整合与结构化**:
   - 将收集的证据按主题或观点分类
   - 提取关键数据点和核心发现
   - 建立证据间的逻辑关联
   - 形成结构化的证据档案

## JSON输出格式规范：
```json
{
  "sub_question": "子问题的准确描述",
  "search_process": {
    "keywords_used": ["关键词1", "关键词2", "关键词3", "..."],
    "search_rounds": 3,
    "total_sources_reviewed": 15,
    "sources_selected": 8
  },
  "evidence_collection": [
    {
      "id": "E1",
      "source_type": "academic/official/news/expert/industry/community",
      "source_name": "来源名称",
      "author": "作者(如适用)",
      "publication_date": "发布日期",
      "url": "来源链接",
      "credibility_score": 8.5,
      "credibility_justification": "可信度评分理由",
      "key_findings": [
        "关键发现1",
        "关键发现2",
        "..."
      ],
      "relevant_quotes": [
        "相关引用1",
        "相关引用2",
        "..."
      ],
      "limitations": "该来源的局限性或潜在偏见"
    },
    {
      "id": "E2",
      "source_type": "academic/official/news/expert/industry/community",
      "source_name": "来源名称",
      "author": "作者(如适用)",
      "publication_date": "发布日期",
      "url": "来源链接",
      "credibility_score": 7.0,
      "credibility_justification": "可信度评分理由",
      "key_findings": [
        "关键发现1",
        "关键发现2",
        "..."
      ],
      "relevant_quotes": [
        "相关引用1",
        "相关引用2",
        "..."
      ],
      "limitations": "该来源的局限性或潜在偏见"
    }
  ],
  "conflict_analysis": [
    {
      "conflict_id": "C1",
      "topic": "冲突主题",
      "conflicting_evidence": ["E1", "E3"],
      "nature_of_conflict": "冲突的具体内容",
      "possible_explanations": [
        "可能的解释1",
        "可能的解释2"
      ],
      "resolution_approach": "如何处理或解释这一冲突"
    }
  ],
  "evidence_synthesis": {
    "main_findings": [
      "主要发现1",
      "主要发现2",
      "..."
    ],
    "consensus_points": [
      "各方共识点1",
      "各方共识点2",
      "..."
    ],
    "disputed_points": [
      "存在争议的观点1",
      "存在争议的观点2",
      "..."
    ],
    "evidence_gaps": [
      "证据缺口1",
      "证据缺口2",
      "..."
    ],
    "confidence_assessment": "对整体证据质量和结论可信度的评估"
  }
}
```

## 输出验证检查清单：
1. JSON格式是否完全符合规范？
   - 确保所有引号、括号、逗号正确
   - 移除所有注释行（如 "// 更多证据..."）
   - 检查所有字段名和值格式是否正确

2. 证据多样性是否充分？
   - 至少包含3种不同类型的来源
   - 来源发布时间应有一定跨度
   - 应包含不同观点或角度

3. 证据质量评估是否充分？
   - 每个来源都有合理的可信度评分
   - 评分理由具体且合理
   - 已标明来源的局限性

4. 冲突检测是否到位？
   - 已识别主要的证据冲突
   - 提供了冲突的可能解释
   - 给出了处理冲突的方法

5. 证据整合是否有效？
   - 主要发现清晰明确
   - 共识点和争议点分别列出
   - 对证据质量有整体评估

请开始系统性证据收集：""",
            "critical_evaluation_high": """# 深度思考：高级批判性评估

请基于Paul-Elder批判性思维标准对以下内容进行全面、深入的评估：

**评估内容**: {content}
**评估背景**: {context}
**评估复杂度**: 高

## Paul-Elder九大标准评估框架

### 1. 准确性 (Accuracy) - 权重: 12%
- **定义**: 信息是否符合事实，没有错误或失真
- **评估问题**:
  - 陈述的事实是否有可验证的证据支持？
  - 引用的数据和统计是否来自可靠来源？
  - 是否存在事实错误或误导性表述？
  - 是否混淆了事实和观点？
- **评分标准**:
  - 10分: 所有信息完全准确，有充分可靠证据支持
  - 7-9分: 大部分信息准确，偶有小错误但不影响核心论点
  - 4-6分: 信息部分准确，存在一些重要错误
  - 1-3分: 信息大多不准确，存在严重错误或误导
- **评分**: _/10分
- **详细理由**:
- **改进建议**:

### 2. 精确性 (Precision) - 权重: 12%
- **定义**: 表述是否具体、明确、详细，避免模糊和歧义
- **评估问题**:
  - 使用的术语和概念是否明确定义？
  - 表述是否足够具体而非笼统？
  - 是否提供了足够的细节和具体例子？
  - 数据表示是否精确（如使用确切数字而非模糊范围）？
- **评分标准**:
  - 10分: 表述极其精确，所有术语清晰定义，细节丰富
  - 7-9分: 表述相当精确，大多数概念明确，细节充分
  - 4-6分: 表述部分精确，一些概念模糊，细节不足
  - 1-3分: 表述极不精确，概念混乱，几乎没有具体细节
- **评分**: _/10分
- **详细理由**:
- **改进建议**:

### 3. 相关性 (Relevance) - 权重: 10%
- **定义**: 内容是否与主题直接相关，避免离题和不必要的信息
- **评估问题**:
  - 所提供的信息是否直接支持核心论点？
  - 是否包含与主题无关的内容？
  - 论据与结论之间的关联是否清晰？
  - 是否优先处理了最相关的方面？
- **评分标准**:
  - 10分: 所有内容高度相关，紧密围绕核心主题
  - 7-9分: 大部分内容相关，偶有不直接相关的内容
  - 4-6分: 部分内容相关，存在明显离题内容
  - 1-3分: 大部分内容不相关，严重偏离主题
- **评分**: _/10分
- **详细理由**:
- **改进建议**:

### 4. 逻辑性 (Logic) - 权重: 12%
- **定义**: 推理过程是否合乎逻辑，避免谬误和矛盾
- **评估问题**:
  - 论证结构是否清晰合理？
  - 前提是否支持结论？
  - 是否存在逻辑谬误（如循环论证、稻草人谬误、诉诸权威等）？
  - 是否存在内部矛盾？
- **评分标准**:
  - 10分: 推理完全合乎逻辑，论证严密，没有谬误
  - 7-9分: 推理大体合乎逻辑，论证较为严密，极少谬误
  - 4-6分: 推理部分合乎逻辑，论证松散，存在明显谬误
  - 1-3分: 推理严重不合逻辑，充满谬误和矛盾
- **评分**: _/10分
- **详细理由**:
- **改进建议**:

### 5. 广度 (Breadth) - 权重: 10%
- **定义**: 是否考虑了多种观点和角度，避免狭隘视角
- **评估问题**:
  - 是否考虑了不同的观点和立场？
  - 是否涵盖了问题的多个方面？
  - 是否考虑了反对意见和替代解释？
  - 是否跨学科地分析了问题？
- **评分标准**:
  - 10分: 全面考虑多种观点，包括反对意见，视野极为开阔
  - 7-9分: 考虑了多种主要观点，视野较为开阔
  - 4-6分: 仅考虑了有限几种观点，视野较为狭窄
  - 1-3分: 几乎只考虑单一观点，视野极为狭隘
- **评分**: _/10分
- **详细理由**:
- **改进建议**:

### 6. 深度 (Depth) - 权重: 12%
- **定义**: 分析是否深入探讨了复杂性和根本问题，避免肤浅
- **评估问题**:
  - 是否深入探讨了问题的根本原因？
  - 是否处理了问题的复杂性和微妙之处？
  - 是否超越了表面现象探究深层结构？
  - 是否考虑了长期影响和系统性因素？
- **评分标准**:
  - 10分: 分析极其深入，探讨根本问题，处理复杂性
  - 7-9分: 分析相当深入，探讨主要根本问题
  - 4-6分: 分析深度一般，主要停留在表面层次
  - 1-3分: 分析极其肤浅，完全未触及根本问题
- **评分**: _/10分
- **详细理由**:
- **改进建议**:

### 7. 重要性 (Significance) - 权重: 10%
- **定义**: 是否关注了最重要的问题和因素，正确设置优先级
- **评估问题**:
  - 是否识别并关注了最重要的问题？
  - 是否区分了核心问题和次要问题？
  - 是否正确评估了不同因素的相对重要性？
  - 是否避免了过分关注琐碎细节？
- **评分标准**:
  - 10分: 完美把握重点，优先处理最重要问题
  - 7-9分: 大体把握重点，主要关注重要问题
  - 4-6分: 部分把握重点，同时关注一些次要问题
  - 1-3分: 完全未把握重点，主要关注琐碎问题
- **评分**: _/10分
- **详细理由**:
- **改进建议**:

### 8. 公正性 (Fairness) - 权重: 12%
- **定义**: 是否客观公正地处理不同观点，避免偏见和预设立场
- **评估问题**:
  - 是否公平呈现不同立场和观点？
  - 是否避免了情绪化语言和偏见表达？
  - 是否考虑了自身可能的认知偏误？
  - 是否基于证据而非个人偏好做出判断？
- **评分标准**:
  - 10分: 极其公正客观，完全避免偏见，平等对待所有观点
  - 7-9分: 相当公正，基本避免偏见，较为平等地对待主要观点
  - 4-6分: 部分公正，存在一些偏见，对某些观点明显偏向
  - 1-3分: 极不公正，充满偏见，完全偏向特定观点
- **评分**: _/10分
- **详细理由**:
- **改进建议**:

### 9. 清晰性 (Clarity) - 权重: 10%
- **定义**: 表达是否清晰易懂，结构是否条理分明
- **评估问题**:
  - 语言表达是否清晰简洁？
  - 结构组织是否条理分明？
  - 是否使用了适当的例子和说明？
  - 是否避免了不必要的复杂术语和晦涩表达？
- **评分标准**:
  - 10分: 表达极其清晰，结构完美，易于理解
  - 7-9分: 表达相当清晰，结构良好，较易理解
  - 4-6分: 表达部分清晰，结构一般，理解有难度
  - 1-3分: 表达极不清晰，结构混乱，难以理解
- **评分**: _/10分
- **详细理由**:
- **改进建议**:

## 综合评估

### 加权总分计算
- 准确性: _/10 × 12% = _
- 精确性: _/10 × 12% = _
- 相关性: _/10 × 10% = _
- 逻辑性: _/10 × 12% = _
- 广度: _/10 × 10% = _
- 深度: _/10 × 12% = _
- 重要性: _/10 × 10% = _
- 公正性: _/10 × 12% = _
- 清晰性: _/10 × 10% = _

**加权总分**: _/10分

### 质量等级
- 9.0-10.0: 卓越 (Outstanding)
- 8.0-8.9: 优秀 (Excellent)
- 7.0-7.9: 良好 (Good)
- 6.0-6.9: 合格 (Satisfactory)
- 5.0-5.9: 需改进 (Needs Improvement)
- <5.0: 不合格 (Unsatisfactory)

**质量等级**: _

### 主要优势
1. 
2. 
3. 

### 主要不足
1. 
2. 
3. 

### 改进建议
1. 
2. 
3. 
4. 
5. 

### 是否需要重新分析
- [ ] 是，需要全面重新分析
- [ ] 是，需要部分修改和改进
- [ ] 否，质量已达到要求标准

## 输出验证检查清单
1. 是否对所有九个标准都进行了评分？
2. 评分理由是否具体且基于证据？
3. 改进建议是否具体可行？
4. 加权总分计算是否准确？
5. 是否提供了明确的质量等级判断？

## JSON输出格式
```json
{
  "evaluation_subject": "评估内容的简要描述",
  "evaluation_context": "评估背景的简要描述",
  "standards_evaluation": {
    "accuracy": {
      "score": 0,
      "reasoning": "评分理由",
      "suggestions": "改进建议"
    },
    "precision": {
      "score": 0,
      "reasoning": "评分理由",
      "suggestions": "改进建议"
    },
    "relevance": {
      "score": 0,
      "reasoning": "评分理由",
      "suggestions": "改进建议"
    },
    "logic": {
      "score": 0,
      "reasoning": "评分理由",
      "suggestions": "改进建议"
    },
    "breadth": {
      "score": 0,
      "reasoning": "评分理由",
      "suggestions": "改进建议"
    },
    "depth": {
      "score": 0,
      "reasoning": "评分理由",
      "suggestions": "改进建议"
    },
    "significance": {
      "score": 0,
      "reasoning": "评分理由",
      "suggestions": "改进建议"
    },
    "fairness": {
      "score": 0,
      "reasoning": "评分理由",
      "suggestions": "改进建议"
    },
    "clarity": {
      "score": 0,
      "reasoning": "评分理由",
      "suggestions": "改进建议"
    }
  },
  "overall_assessment": {
    "weighted_score": 0,
    "quality_level": "质量等级",
    "strengths": [
      "优势1",
      "优势2",
      "优势3"
    ],
    "weaknesses": [
      "不足1",
      "不足2",
      "不足3"
    ],
    "improvement_suggestions": [
      "建议1",
      "建议2",
      "建议3",
      "建议4",
      "建议5"
    ],
    "requires_reanalysis": true/false
  }
}
```

请开始详细评估：""",

            "critical_evaluation_low": """# 深度思考：基础批判性评估

请基于Paul-Elder批判性思维标准评估以下内容：

**评估内容**: {content}
**评估背景**: {context}
**评估复杂度**: 低

## Paul-Elder九大标准评估

### 1. 准确性 (Accuracy)
- 信息是否准确无误？
- 有无事实错误？
- 评分：1-10分，理由：

### 2. 精确性 (Precision)  
- 表述是否具体明确？
- 有无模糊不清之处？
- 评分：1-10分，理由：

### 3. 相关性 (Relevance)
- 内容是否与主题相关？
- 有无偏离核心问题？
- 评分：1-10分，理由：

### 4. 逻辑性 (Logic)
- 推理是否合乎逻辑？
- 有无逻辑谬误？
- 评分：1-10分，理由：

### 5. 广度 (Breadth)
- 是否考虑了多个角度？
- 视野是否足够宽广？
- 评分：1-10分，理由：

### 6. 深度 (Depth)
- 分析是否深入透彻？
- 是否触及根本问题？
- 评分：1-10分，理由：

### 7. 重要性 (Significance)
- 关注的是否为核心问题？
- 优先级是否合理？
- 评分：1-10分，理由：

### 8. 公正性 (Fairness)
- 是否存在偏见？
- 对不同观点是否公平？
- 评分：1-10分，理由：

### 9. 清晰性 (Clarity)
- 表达是否清晰易懂？
- 结构是否条理清楚？
- 评分：1-10分，理由：

## 总体评估
- 综合得分：___/90分
- 主要优势：
- 改进建议：
- 是否需要重新分析：是/否

## JSON输出格式
```json
{
  "evaluation_subject": "评估内容的简要描述",
  "evaluation_context": "评估背景的简要描述",
  "standards_scores": {
    "accuracy": 0,
    "precision": 0,
    "relevance": 0,
    "logic": 0,
    "breadth": 0,
    "depth": 0,
    "significance": 0,
    "fairness": 0,
    "clarity": 0
  },
  "overall_assessment": {
    "total_score": 0,
    "strengths": ["优势1", "优势2"],
    "improvement_suggestions": ["建议1", "建议2"],
    "requires_reanalysis": true/false
  }
}
```

请开始评估：""",

            "critical_evaluation": """# 深度思考：批判性评估

请基于Paul-Elder批判性思维标准评估以下内容：

**评估内容**: {content}
**评估背景**: {context}
**评估复杂度**: {complexity}

## Paul-Elder九大标准评估：

### 1. 准确性 (Accuracy) - 权重: 12%
- **定义**: 信息是否符合事实，没有错误或失真
- **评估问题**:
  - 陈述的事实是否有证据支持？
  - 引用的数据和统计是否可靠？
  - 是否存在事实错误？
- **评分**: _/10分
- **理由**:
- **改进建议**:

### 2. 精确性 (Precision) - 权重: 12%  
- **定义**: 表述是否具体、明确、详细
- **评估问题**:
  - 使用的术语是否明确？
  - 表述是否具体而非笼统？
  - 是否提供了足够的细节？
- **评分**: _/10分
- **理由**:
- **改进建议**:

### 3. 相关性 (Relevance) - 权重: 10%
- **定义**: 内容是否与主题直接相关
- **评估问题**:
  - 信息是否支持核心论点？
  - 是否包含无关内容？
  - 论据与结论的关联是否清晰？
- **评分**: _/10分
- **理由**:
- **改进建议**:

### 4. 逻辑性 (Logic) - 权重: 12%
- **定义**: 推理过程是否合乎逻辑
- **评估问题**:
  - 论证结构是否合理？
  - 前提是否支持结论？
  - 是否存在逻辑谬误？
- **评分**: _/10分
- **理由**:
- **改进建议**:

### 5. 广度 (Breadth) - 权重: 10%
- **定义**: 是否考虑了多种观点和角度
- **评估问题**:
  - 是否考虑了不同观点？
  - 是否涵盖了问题的多个方面？
  - 是否考虑了反对意见？
- **评分**: _/10分
- **理由**:
- **改进建议**:

### 6. 深度 (Depth) - 权重: 12%
- **定义**: 分析是否深入探讨了复杂性
- **评估问题**:
  - 是否探讨了问题的根本原因？
  - 是否处理了问题的复杂性？
  - 是否超越了表面现象？
- **评分**: _/10分
- **理由**:
- **改进建议**:

### 7. 重要性 (Significance) - 权重: 10%
- **定义**: 是否关注了最重要的问题
- **评估问题**:
  - 是否识别了最重要的问题？
  - 是否区分了核心和次要问题？
  - 是否正确设置了优先级？
- **评分**: _/10分
- **理由**:
- **改进建议**:

### 8. 公正性 (Fairness) - 权重: 12%
- **定义**: 是否客观公正地处理不同观点
- **评估问题**:
  - 是否公平呈现不同立场？
  - 是否避免了偏见表达？
  - 是否基于证据做出判断？
- **评分**: _/10分
- **理由**:
- **改进建议**:

### 9. 清晰性 (Clarity) - 权重: 10%
- **定义**: 表达是否清晰易懂，结构是否条理
- **评估问题**:
  - 语言表达是否清晰？
  - 结构组织是否条理？
  - 是否易于理解？
- **评分**: _/10分
- **理由**:
- **改进建议**:

## 综合评估

### 加权总分计算
- 准确性: _/10 × 12% = _
- 精确性: _/10 × 12% = _
- 相关性: _/10 × 10% = _
- 逻辑性: _/10 × 12% = _
- 广度: _/10 × 10% = _
- 深度: _/10 × 12% = _
- 重要性: _/10 × 10% = _
- 公正性: _/10 × 12% = _
- 清晰性: _/10 × 10% = _

**加权总分**: _/10分

### 质量等级
- 9.0-10.0: 卓越 (Outstanding)
- 8.0-8.9: 优秀 (Excellent)
- 7.0-7.9: 良好 (Good)
- 6.0-6.9: 合格 (Satisfactory)
- 5.0-5.9: 需改进 (Needs Improvement)
- <5.0: 不合格 (Unsatisfactory)

**质量等级**: _

### 主要优势
1. 
2. 
3. 

### 主要不足
1. 
2. 
3. 

### 改进建议
1. 
2. 
3. 

### 是否需要重新分析
- [ ] 是，需要重新分析
- [ ] 否，质量已达到要求标准

## JSON输出格式
```json
{
  "evaluation_subject": "评估内容的简要描述",
  "evaluation_context": "评估背景的简要描述",
  "standards_evaluation": {
    "accuracy": {
      "score": 0,
      "reasoning": "评分理由",
      "suggestions": "改进建议"
    },
    "precision": {
      "score": 0,
      "reasoning": "评分理由",
      "suggestions": "改进建议"
    },
    "relevance": {
      "score": 0,
      "reasoning": "评分理由",
      "suggestions": "改进建议"
    },
    "logic": {
      "score": 0,
      "reasoning": "评分理由",
      "suggestions": "改进建议"
    },
    "breadth": {
      "score": 0,
      "reasoning": "评分理由",
      "suggestions": "改进建议"
    },
    "depth": {
      "score": 0,
      "reasoning": "评分理由",
      "suggestions": "改进建议"
    },
    "significance": {
      "score": 0,
      "reasoning": "评分理由",
      "suggestions": "改进建议"
    },
    "fairness": {
      "score": 0,
      "reasoning": "评分理由",
      "suggestions": "改进建议"
    },
    "clarity": {
      "score": 0,
      "reasoning": "评分理由",
      "suggestions": "改进建议"
    }
  },
  "overall_assessment": {
    "weighted_score": 0,
    "quality_level": "质量等级",
    "strengths": [
      "优势1",
      "优势2",
      "优势3"
    ],
    "weaknesses": [
      "不足1",
      "不足2",
      "不足3"
    ],
    "improvement_suggestions": [
      "建议1",
      "建议2",
      "建议3"
    ],
    "requires_reanalysis": true/false
  }
}
```

请开始详细评估：""",
            "session_recovery": """# 会话恢复

抱歉，之前的思考会话似乎中断了。让我们重新开始：

**会话ID**: {session_id}

请选择以下选项之一：
1. 重新开始完整的深度思考流程
2. 从特定步骤继续（如果你记得之前的进展）
3. 进行快速分析

请告诉我你希望如何继续：""",
            "error_recovery": """# 错误恢复

在执行 {tool_name} 工具时发生了错误：

**错误信息**: {error_message}
**会话ID**: {session_id}

请选择以下恢复选项：
1. 重新尝试当前操作
2. 跳过当前步骤继续
3. 重新开始思考流程
4. 结束当前会话

请告诉我你希望如何处理：""",
            "comprehensive_summary": """# 深度思考综合报告

## 📋 会话信息
- **思考主题**: {topic}
- **流程类型**: {flow_type}
- **完成时间**: {completion_timestamp}
- **会话时长**: {session_duration}
- **总步骤数**: {total_steps}
- **整体评估**: {overall_assessment}

## 🔄 思考历程回顾
{step_summary}

## 📊 质量分析报告
{quality_metrics}

## 🎯 请生成详细的综合报告：

### 1. 🔍 核心发现与洞察
请基于整个思考过程，总结出最重要的发现：
- **主要结论**: 基于证据和分析得出的核心结论
- **关键洞察**: 思考过程中产生的重要洞察
- **意外发现**: 超出预期的重要发现
- **深层理解**: 对问题本质的深层理解

### 2. 📚 证据与支撑分析
请评估和总结证据基础：
- **最有力的证据**: 支撑结论的最强证据
- **证据质量评估**: 整体证据的可信度和完整性
- **证据缺口分析**: 识别证据不足的领域
- **不确定性分析**: 结论中存在的不确定性

### 3. 🔄 多角度综合分析
请整合不同视角的分析结果：
- **支持观点汇总**: 支持主要结论的观点和论据
- **反对观点汇总**: 质疑或反对的观点和论据
- **中立分析汇总**: 客观平衡的分析观点
- **观点整合**: 如何整合不同观点形成综合判断

### 4. 🎨 创新思维成果
如果包含创新思维环节，请总结：
- **创新想法**: 产生的新颖想法或解决方案
- **可行性评估**: 创新想法的实施可行性
- **潜在影响**: 创新方案可能带来的影响
- **实施建议**: 具体的实施路径和建议

### 5. 🤔 反思与元认知
请进行深度反思：
- **思维过程评价**: 对整个思考过程的评价
- **方法论反思**: 使用的思维方法的有效性
- **认知盲点识别**: 发现的思维盲点和局限
- **学习收获**: 从这次思考中获得的学习

### 6. 📈 质量改进建议
基于质量分析，提供改进建议：
- **改进优先级**: {improvement_areas}
- **最佳实践**: 本次思考中的最佳实践（最佳步骤: {best_step}）
- **避免陷阱**: 需要避免的思维陷阱
- **持续改进**: 未来思考的改进方向

### 7. 🎯 行动建议与后续思考
请提供具体的行动指导：
- **立即行动**: 基于结论可以立即采取的行动
- **中期规划**: 需要进一步规划的中期行动
- **持续关注**: 需要持续关注和思考的问题
- **知识缺口**: 需要进一步学习和研究的领域

### 8. 💡 最终洞察与总结
{final_insights}

## 📝 思维轨迹记录
{thinking_trace}

---

**报告生成说明**: 请基于以上框架生成详细、结构化的综合报告，确保每个部分都有具体内容，避免空泛的表述。重点突出基于证据的结论和具有实用价值的洞察。""",
            "reflection": """# 深度思考：苏格拉底式反思

现在让我们对整个思考过程进行深度反思：

**思考主题**: {topic}
**思考历程**: {thinking_history}
**当前结论**: {current_conclusions}

## 苏格拉底式提问：

### 🤔 过程反思 (Process Reflection)
1. **我是如何得出这些结论的？**
   - 我使用了哪些思维方法？
   - 我的推理过程是否合理？
   - 反思：

2. **我考虑了哪些角度？**
   - 是否遗漏了重要视角？
   - 不同利益相关者的观点如何？
   - 反思：

3. **我的证据是否充分？**
   - 证据的质量和可信度如何？
   - 是否存在相互矛盾的证据？
   - 反思：

### 🎯 结果反思 (Outcome Reflection)
4. **我的结论有多确定？**
   - 哪些部分我很确信？
   - 哪些部分还存在不确定性？
   - 反思：

5. **如果我错了会怎样？**
   - 最坏的情况是什么？
   - 如何降低错误的风险？
   - 反思：

6. **还有其他可能的解释吗？**
   - 是否存在我没有考虑的替代方案？
   - 如何验证我的结论？
   - 反思：

### 🧠 元认知反思 (Metacognitive Reflection)
7. **我的思维模式如何？**
   - 我倾向于使用哪些思维方式？
   - 我有哪些思维盲点？
   - 反思：

8. **我学到了什么？**
   - 这次思考让我获得了什么新见解？
   - 我的思维能力有何提升？
   - 反思：

9. **下次如何改进？**
   - 我可以在哪些方面做得更好？
   - 需要培养哪些新的思维技能？
   - 反思：

## 最终总结：
- **核心洞察**：
- **主要收获**：
- **行动计划**：
- **持续思考的问题**：

请开始深度反思：""",
            "improvement_guidance": """# 步骤改进指导

当前步骤的质量需要提升。请根据以下指导进行改进：

**当前步骤**: {step_name}
**质量评分**: {quality_score}
**改进建议**: {improvement_suggestions}

## 改进要点：
1. **内容完整性**: 确保回答涵盖所有要求的方面
2. **逻辑清晰性**: 检查推理过程是否合理连贯
3. **证据支撑**: 加强事实依据和引用来源
4. **深度分析**: 避免表面化，深入探讨核心问题

## 具体改进方向：
{specific_improvements}

请重新完成当前步骤，注意以上改进要点：""",
            "flow_completion": """# 思维流程完成

恭喜！你已经完成了深度思考的主要流程。

**会话ID**: {session_id}
**完成时间**: {completion_time}

现在可以：
1. 调用complete_thinking工具生成最终综合报告
2. 回顾整个思考过程的关键洞察
3. 开始新的深度思考会话

请选择你希望进行的下一步操作：""",
            # Analysis templates for different step types
            "analyze_decomposition": """# 步骤质量分析：问题分解

请分析以下问题分解结果的质量：

**原始问题**: {original_topic}
**分解结果**: {step_result}
**分析类型**: {analysis_type}

## 分解质量评估标准：

### 1. 完整性 (Completeness) - 权重: 25%
- 是否覆盖了问题的主要方面？
- 子问题数量是否合适（3-7个）？
- 是否遗漏了重要角度？
- 评分：1-10分，理由：

### 2. 独立性 (Independence) - 权重: 20%
- 各子问题是否相对独立？
- 是否存在过度重叠？
- 能否独立分析每个子问题？
- 评分：1-10分，理由：

### 3. 可操作性 (Actionability) - 权重: 20%
- 子问题是否具体可分析？
- 搜索关键词是否合适？
- 是否提供了分析方向？
- 评分：1-10分，理由：

### 4. 逻辑结构 (Logical Structure) - 权重: 15%
- 分解逻辑是否清晰？
- 优先级设置是否合理？
- 依赖关系是否明确？
- 评分：1-10分，理由：

### 5. 格式规范 (Format Compliance) - 权重: 20%
- 是否符合JSON格式要求？
- 必需字段是否完整？
- 数据结构是否正确？
- 评分：1-10分，理由：

## 综合评估：
- **加权总分**: ___/10分 (计算公式: (完整性×0.25 + 独立性×0.2 + 可操作性×0.2 + 逻辑结构×0.15 + 格式规范×0.2))
- **质量等级**: {quality_level}
- **是否通过质量门控**: {quality_gate_passed}

## 改进建议：
{improvement_suggestions}

## 下一步建议：
{next_step_recommendation}

请开始详细分析：""",
            "analyze_evidence": """# 步骤质量分析：证据收集

请分析以下证据收集结果的质量：

**子问题**: {sub_question}
**证据收集结果**: {step_result}
**分析类型**: {analysis_type}

## 证据质量评估标准：

### 1. 来源多样性 (Source Diversity) - 权重: 25%
- 是否包含多种类型的来源？
- 学术、媒体、官方来源是否平衡？
- 是否避免了单一来源依赖？
- 评分：1-10分，理由：

### 2. 可信度评估 (Credibility Assessment) - 权重: 25%
- 来源的权威性如何？
- 是否提供了可信度评分？
- 是否识别了潜在偏见？
- 评分：1-10分，理由：

### 3. 相关性匹配 (Relevance Matching) - 权重: 20%
- 证据是否直接回答子问题？
- 关键词匹配度如何？
- 是否偏离了核心问题？
- 评分：1-10分，理由：

### 4. 信息完整性 (Information Completeness) - 权重: 15%
- 关键事实是否提取完整？
- 是否包含必要的引用信息？
- 摘要质量如何？
- 评分：1-10分，理由：

### 5. 冲突识别 (Conflict Identification) - 权重: 15%
- 是否识别了相互矛盾的信息？
- 对争议点的处理是否得当？
- 是否标记了不确定性？
- 评分：1-10分，理由：

## 综合评估：
- **加权总分**: ___/10分
- **质量等级**: {quality_level}
- **是否通过质量门控**: {quality_gate_passed}

## 改进建议：
{improvement_suggestions}

## 下一步建议：
{next_step_recommendation}

请开始详细分析：""",
            "analyze_debate": """# 步骤质量分析：多角度辩论

请分析以下多角度辩论结果的质量：

**辩论主题**: {debate_topic}
**辩论结果**: {step_result}
**分析类型**: {analysis_type}

## 辩论质量评估标准：

### 1. 角度多样性 (Perspective Diversity) - 权重: 25%
- 是否涵盖了不同立场？
- 角色设定是否清晰？
- 观点是否有实质性差异？
- 评分：1-10分，理由：

### 2. 论证质量 (Argument Quality) - 权重: 25%
- 论据是否有力？
- 逻辑推理是否严密？
- 是否基于证据？
- 评分：1-10分，理由：

### 3. 互动深度 (Interaction Depth) - 权重: 20%
- 是否有效质疑对方观点？
- 回应是否切中要害？
- 辩论是否深入？
- 评分：1-10分，理由：

### 4. 平衡性 (Balance) - 权重: 15%
- 各方观点是否得到充分表达？
- 辩论时间是否合理分配？
- 是否避免了一边倒？
- 评分：1-10分，理由：

### 5. 建设性 (Constructiveness) - 权重: 15%
- 是否产生了新的洞察？
- 争议点是否得到澄清？
- 是否推进了问题理解？
- 评分：1-10分，理由：

## 综合评估：
- **加权总分**: ___/10分
- **质量等级**: {quality_level}
- **是否通过质量门控**: {quality_gate_passed}

## 改进建议：
{improvement_suggestions}

## 下一步建议：
{next_step_recommendation}

请开始详细分析：""",
            "analyze_evaluation": """# 步骤质量分析：批判性评估

请分析以下批判性评估结果的质量：

**评估内容**: {evaluated_content}
**评估结果**: {step_result}
**分析类型**: {analysis_type}

## 评估质量分析标准：

### 1. 标准应用 (Standards Application) - 权重: 30%
- 是否正确应用了Paul-Elder九大标准？
- 每个标准的评分是否合理？
- 评估理由是否充分？
- 评分：1-10分，理由：

### 2. 评分准确性 (Scoring Accuracy) - 权重: 25%
- 评分是否与分析内容匹配？
- 是否避免了过于宽松或严格？
- 综合得分计算是否正确？
- 评分：1-10分，理由：

### 3. 改进建议 (Improvement Suggestions) - 权重: 20%
- 改进建议是否具体可行？
- 是否针对了主要问题？
- 建议的优先级是否合理？
- 评分：1-10分，理由：

### 4. 客观性 (Objectivity) - 权重: 15%
- 评估是否客观公正？
- 是否避免了主观偏见？
- 证据引用是否充分？
- 评分：1-10分，理由：

### 5. 决策支持 (Decision Support) - 权重: 10%
- 是否明确了下一步行动？
- 质量门控判断是否合理？
- 是否提供了清晰的指导？
- 评分：1-10分，理由：

## 综合评估：
- **加权总分**: ___/10分
- **质量等级**: {quality_level}
- **是否通过质量门控**: {quality_gate_passed}

## 改进建议：
{improvement_suggestions}

## 下一步建议：
{next_step_recommendation}

请开始详细分析：""",
            "analyze_reflection": """# 步骤质量分析：反思过程

请分析以下反思结果的质量：

**反思主题**: {reflection_topic}
**反思结果**: {step_result}
**分析类型**: {analysis_type}

## 反思质量评估标准：

### 1. 深度反思 (Reflection Depth) - 权重: 30%
- 是否深入思考了思维过程？
- 元认知意识是否充分？
- 自我评估是否诚实？
- 评分：1-10分，理由：

### 2. 洞察质量 (Insight Quality) - 权重: 25%
- 是否产生了有价值的洞察？
- 发现的问题是否重要？
- 学习收获是否具体？
- 评分：1-10分，理由：

### 3. 改进方向 (Improvement Direction) - 权重: 20%
- 改进建议是否可行？
- 是否识别了关键改进点？
- 行动计划是否具体？
- 评分：1-10分，理由：

### 4. 思维监控 (Metacognitive Monitoring) - 权重: 15%
- 是否识别了思维模式？
- 对思维盲点的认识如何？
- 自我监控能力如何？
- 评分：1-10分，理由：

### 5. 持续学习 (Continuous Learning) - 权重: 10%
- 是否体现了学习态度？
- 对未来思考的规划如何？
- 知识迁移能力如何？
- 评分：1-10分，理由：

## 综合评估：
- **加权总分**: ___/10分
- **质量等级**: {quality_level}
- **是否通过质量门控**: {quality_gate_passed}

## 改进建议：
{improvement_suggestions}

## 下一步建议：
{next_step_recommendation}

请开始详细分析：""",
            "quality_gate_failed": """# 质量门控未通过

当前步骤的质量评估未达到要求标准。

**步骤名称**: {step_name}
**质量得分**: {quality_score}/10
**要求标准**: {quality_threshold}/10
**主要问题**: {main_issues}

## 改进要求：

### 🔴 必须改进的问题：
{critical_issues}

### 🟡 建议改进的方面：
{improvement_suggestions}

### 📋 改进检查清单：
{improvement_checklist}

## 改进指导：
{improvement_guidance}

## 下一步行动：
1. 根据以上建议重新完成当前步骤
2. 确保解决所有标记的关键问题
3. 完成后再次调用analyze_step进行质量检查

请按照改进要求重新执行当前步骤：""",
            "format_validation_failed": """# 格式验证失败

步骤结果的格式不符合要求，需要重新格式化。

**步骤名称**: {step_name}
**期望格式**: {expected_format}
**检测到的问题**: {format_issues}

## 格式要求：
{format_requirements}

## 示例格式：
{format_example}

## 常见格式错误：
{common_format_errors}

请按照正确格式重新提交结果：""",
            
            "multi_perspective_debate": """# 深度思考：多角度辩论

基于收集的证据，现在需要从多个角度深入辩论以下主题：

**辩论主题**: {{topic}}
**可用证据**: {{evidence_summary}}
**辩论复杂度**: {{complexity}}
**关注焦点**: {{focus}}

## 🎭 辩论角色设定

你需要分别扮演以下三个角色进行结构化辩论：

### 🟢 支持方 (Proponent)
**立场**: 支持该观点/方案/政策
**核心任务**: 
- 提出最强有力的支持论据
- 基于证据构建逻辑链条
- 积极回应反对方的质疑
- 强调积极影响和潜在收益

**论证要求**:
- 每轮发言控制在150-200字
- 必须引用具体证据支撑观点
- 逻辑清晰，避免情绪化表达
- 主动识别并回应潜在反驳

### 🔴 反对方 (Opponent)
**立场**: 质疑或反对该观点/方案/政策
**核心任务**:
- 指出潜在问题、风险和负面影响
- 质疑支持方论据的可靠性
- 提出替代方案或改进建议
- 强调实施困难和不确定性

**论证要求**:
- 每轮发言控制在150-200字
- 基于事实进行批判性分析
- 避免纯粹的否定，提供建设性质疑
- 识别论证中的逻辑漏洞

### 🟡 中立分析方 (Neutral Analyst)
**立场**: 客观分析各方观点，寻求平衡
**核心任务**:
- 公正评估双方论据的优劣
- 识别争议的核心分歧点
- 寻找可能的中间路径
- 综合分析利弊得失

**论证要求**:
- 每轮发言控制在150-200字
- 保持客观中立，避免偏向任何一方
- 重点分析而非简单总结
- 提出综合性的见解和建议

## 🔄 辩论流程设计

### 第一轮：立场阐述 (Position Statements)
各方分别阐述核心观点和主要论据：

**🟢 支持方开场** (150-200字):
- 明确表达支持立场
- 提出2-3个核心论据
- 引用最有力的证据
- 预告后续论证方向

**🔴 反对方开场** (150-200字):
- 明确表达反对立场
- 指出2-3个主要问题
- 引用相关证据支撑
- 质疑支持方的核心假设

**🟡 中立方开场** (150-200字):
- 概述争议的复杂性
- 识别双方的合理之处
- 指出需要深入探讨的关键问题
- 提出分析框架

### 第二轮：交锋质疑 (Cross-Examination)
各方针对前一轮的观点进行质疑和回应：

**🟢 支持方质疑** (100-150字):
- 针对反对方的核心论点进行反驳
- 指出其论据的局限性或偏见
- 提供反例或相反证据
- 强化自己的立场

**🔴 反对方质疑** (100-150字):
- 深入质疑支持方的关键假设
- 指出证据解读的问题
- 强调被忽视的风险因素
- 挑战实施的可行性

**🟡 中立方分析** (100-150字):
- 评估双方质疑的有效性
- 指出争论的核心分歧
- 识别需要更多证据的领域
- 提出澄清性问题

### 第三轮：深度交锋 (Deep Engagement)
基于前两轮的交锋，进行更深入的论证：

**🟢 支持方深化** (100-150字):
- 回应反对方的核心质疑
- 提供更详细的实施路径
- 强调长远利益和战略价值
- 承认局限性但论证总体优势

**🔴 反对方深化** (100-150字):
- 进一步阐述风险和负面后果
- 质疑支持方的回应是否充分
- 提出具体的替代方案
- 强调谨慎行事的必要性

**🟡 中立方综合** (100-150字):
- 综合评估三轮辩论的质量
- 识别最有说服力的论点
- 指出仍需解决的关键问题
- 提出可能的妥协或平衡方案

## 📊 输出格式要求

请严格按照以下JSON格式输出辩论结果：

```json
{
  "debate_topic": "辩论主题的准确描述",
  "evidence_base": "使用的证据基础概述",
  "participants": [
    {
      "role": "proponent",
      "position": "支持方立场描述",
      "rounds": [
        {
          "round": 1,
          "content": "第一轮发言内容",
          "key_arguments": ["论据1", "论据2", "论据3"],
          "evidence_cited": ["证据来源1", "证据来源2"],
          "word_count": 180
        },
        {
          "round": 2,
          "content": "第二轮发言内容",
          "key_arguments": ["论据1", "论据2"],
          "evidence_cited": ["证据来源1"],
          "word_count": 120
        },
        {
          "round": 3,
          "content": "第三轮发言内容",
          "key_arguments": ["论据1", "论据2"],
          "evidence_cited": ["证据来源1"],
          "word_count": 130
        }
      ]
    },
    {
      "role": "opponent",
      "position": "反对方立场描述",
      "rounds": [
        {
          "round": 1,
          "content": "第一轮发言内容",
          "key_arguments": ["论据1", "论据2", "论据3"],
          "evidence_cited": ["证据来源1", "证据来源2"],
          "word_count": 190
        },
        {
          "round": 2,
          "content": "第二轮发言内容",
          "key_arguments": ["论据1", "论据2"],
          "evidence_cited": ["证据来源1"],
          "word_count": 140
        },
        {
          "round": 3,
          "content": "第三轮发言内容",
          "key_arguments": ["论据1", "论据2"],
          "evidence_cited": ["证据来源1"],
          "word_count": 125
        }
      ]
    },
    {
      "role": "neutral_analyst",
      "position": "中立分析方立场描述",
      "rounds": [
        {
          "round": 1,
          "content": "第一轮发言内容",
          "key_arguments": ["分析点1", "分析点2", "分析点3"],
          "evidence_cited": ["证据来源1", "证据来源2"],
          "word_count": 175
        },
        {
          "round": 2,
          "content": "第二轮发言内容",
          "key_arguments": ["分析点1", "分析点2"],
          "evidence_cited": ["证据来源1"],
          "word_count": 135
        },
        {
          "round": 3,
          "content": "第三轮发言内容",
          "key_arguments": ["综合分析1", "综合分析2"],
          "evidence_cited": ["证据来源1"],
          "word_count": 145
        }
      ]
    }
  ],
  "debate_analysis": {
    "total_rounds": 3,
    "key_disagreements": [
      "核心分歧点1",
      "核心分歧点2",
      "核心分歧点3"
    ],
    "consensus_points": [
      "共识点1",
      "共识点2"
    ],
    "strongest_arguments": [
      {
        "participant": "proponent",
        "argument": "最强论据描述",
        "strength_reason": "强有力的原因"
      },
      {
        "participant": "opponent",
        "argument": "最强质疑描述",
        "strength_reason": "质疑的有效性"
      }
    ],
    "weakest_arguments": [
      {
        "participant": "proponent",
        "argument": "较弱论据描述",
        "weakness_reason": "薄弱的原因"
      },
      {
        "participant": "opponent",
        "argument": "较弱质疑描述",
        "weakness_reason": "质疑的局限性"
      }
    ],
    "unresolved_issues": [
      "未解决问题1",
      "未解决问题2"
    ],
    "debate_quality_assessment": {
      "logical_rigor": 8.5,
      "evidence_usage": 7.8,
      "argument_depth": 8.2,
      "interaction_quality": 7.9,
      "overall_score": 8.1
    }
  },
  "next_steps_recommendation": {
    "further_evidence_needed": [
      "需要补充的证据类型1",
      "需要补充的证据类型2"
    ],
    "key_questions_to_explore": [
      "需要进一步探讨的问题1",
      "需要进一步探讨的问题2"
    ],
    "suggested_follow_up": "建议的后续行动"
  }
}
```

## ✅ 质量检查清单

在输出结果前，请确认以下要点：

### 内容质量检查
- [ ] 每个角色的立场是否清晰明确？
- [ ] 论据是否基于提供的证据？
- [ ] 各轮发言是否符合字数要求？
- [ ] 是否体现了真实的交锋和互动？
- [ ] 论证逻辑是否严密？

### 角色一致性检查
- [ ] 支持方是否始终维护支持立场？
- [ ] 反对方是否提出了有效质疑？
- [ ] 中立方是否保持客观平衡？
- [ ] 各角色的论证风格是否一致？

### 格式规范检查
- [ ] JSON格式是否完全正确？
- [ ] 所有必需字段是否完整？
- [ ] 数组和对象结构是否正确？
- [ ] 字符串是否正确转义？
- [ ] 数值类型是否正确？

### 辩论质量检查
- [ ] 是否识别了核心分歧点？
- [ ] 是否找到了可能的共识？
- [ ] 强弱论据分析是否合理？
- [ ] 质量评分是否客观？
- [ ] 后续建议是否具体可行？

## 🚀 开始多角度辩论

请基于以上要求，开始进行结构化的三方辩论。记住：
- 保持各角色的独特视角和立场
- 确保论证基于证据而非臆测
- 追求深度交锋而非表面争论
- 最终目标是全面理解问题的复杂性

开始辩论：""",
            # Additional templates for complex analysis
            "comprehensive_evidence_collection": """# 深度思考：全面证据收集

你现在需要为以下子问题进行全面、深入的证据收集：

**子问题**: {sub_question}
**搜索关键词**: {keywords}
**复杂度要求**: 高度全面性和深度分析

## 全面搜索策略：
1. **学术研究**: 搜索同行评议的学术论文和研究报告
2. **权威机构**: 政府部门、国际组织的官方数据和报告
3. **行业分析**: 专业咨询机构和行业协会的分析报告
4. **新闻媒体**: 主流媒体的深度报道和调查
5. **专家观点**: 领域专家的访谈、演讲和专业评论
6. **案例研究**: 相关的成功和失败案例分析

## 证据质量要求：
- 每个子问题至少收集7-10个不同来源的证据
- 确保来源的地理分布多样性（国内外）
- 包含不同时间段的数据（历史趋势分析）
- 涵盖不同利益相关者的观点

## 输出格式：
请整理为详细的证据档案，包含：
- 证据分类和标签
- 来源可信度详细评估
- 证据间的关联性分析
- 潜在偏见和局限性说明

开始全面证据收集：""",
            "advanced_decomposition": """# 深度思考：高级问题分解

你是一位资深的系统分析专家。请对以下复杂问题进行多层次、多维度的深度分解：

**主要问题**: {topic}
**复杂度**: {complexity}
**关注重点**: {focus}
**领域背景**: {domain_context}

## 高级分解策略：
1. **系统性分解**: 从系统论角度识别问题的各个子系统
2. **时间维度分解**: 短期、中期、长期影响和解决方案
3. **利益相关者分解**: 不同角色和群体的视角和需求
4. **因果链分解**: 根本原因、中间因素、直接后果
5. **层次结构分解**: 战略层、战术层、操作层的问题
6. **跨领域分解**: 技术、经济、社会、政治、环境等维度

## 输出要求：
请以JSON格式输出，包含：
- main_question: 主要问题
- sub_questions: 分层子问题列表（至少5-8个）
- question_hierarchy: 问题层次结构
- stakeholder_perspectives: 利益相关者视角
- causal_relationships: 因果关系映射
- complexity_analysis: 复杂度评估
- interdependencies: 相互依赖关系

开始高级分解：""",
            "advanced_critical_evaluation": """# 深度思考：高级批判性评估

请基于扩展的批判性思维标准对以下内容进行深度评估：

**评估内容**: {content}
**评估背景**: {context}

## 扩展评估标准：

### Paul-Elder九大标准 (权重: 60%)
1. 准确性 (Accuracy) - 10%
2. 精确性 (Precision) - 10%
3. 相关性 (Relevance) - 10%
4. 逻辑性 (Logic) - 10%
5. 广度 (Breadth) - 5%
6. 深度 (Depth) - 5%
7. 重要性 (Significance) - 5%
8. 公正性 (Fairness) - 5%
9. 清晰性 (Clarity) - 5%

### 高级评估维度 (权重: 40%)
10. 创新性 (Innovation) - 10%
    - 是否提出了新颖的观点或方法？
    - 创新程度如何？
    - 评分：1-10分，理由：

11. 可操作性 (Actionability) - 10%
    - 建议是否具体可执行？
    - 实施的可行性如何？
    - 评分：1-10分，理由：

12. 系统性 (Systematicity) - 10%
    - 是否采用了系统性思维？
    - 各部分的整合程度如何？
    - 评分：1-10分，理由：

13. 前瞻性 (Foresight) - 10%
    - 是否考虑了未来发展趋势？
    - 预测的合理性如何？
    - 评分：1-10分，理由：

## 综合评估：
- **加权总分**: ___/130分
- **质量等级**: 优秀(110+)/良好(90-109)/合格(70-89)/需改进(<70)
- **是否通过高级质量门控**: {quality_gate_passed}

## 详细改进建议：
{improvement_suggestions}

请开始高级评估：""",
        }

        # Store templates in cache
        for name, content in templates.items():
            self.cache[name] = content
            self.metadata[name] = {"builtin": True, "usage_count": 0, "last_used": None}

    def get_template(
        self, template_name: str, parameters: Optional[Dict[str, Any]] = None
    ) -> str:
        """Get template with parameter substitution"""
        parameters = parameters or {}
        
        # Special handling for templates based on complexity
        if template_name == "decomposition" and "complexity" in parameters:
            complexity = str(parameters.get("complexity", "")).lower()
            if complexity in ["high", "高"]:
                actual_template = "decomposition_high"
            elif complexity in ["medium", "中", "中等"]:
                actual_template = "decomposition_medium"
            elif complexity in ["low", "低"]:
                actual_template = "decomposition_low"
            else:
                actual_template = "decomposition"
        elif template_name == "bias_detection":
            # Import the bias detection template module
            try:
                from src.mcps.deep_thinking.templates.bias_detection_template import get_bias_detection_template
                return get_bias_detection_template(parameters)
            except ImportError:
                # Fallback to a simple template if the module is not available
                content = parameters.get("content", "[content]")
                context = parameters.get("context", "[context]")
                complexity_param = str(parameters.get("complexity", "medium")).lower()
                # Continue with the existing bias_detection template implementation
                
        elif template_name == "innovation":
            # Import the innovation template module
            try:
                from src.mcps.deep_thinking.templates.innovation_template import get_innovation_template
                return get_innovation_template(parameters)
            except ImportError:
                # Fallback to a simple template if the module is not available
                concept = parameters.get("concept", "[concept]")
                direction = parameters.get("direction", "[direction]")
                constraints = parameters.get("constraints", "[constraints]")
                method = parameters.get("method", "scamper")
                complexity_param = str(parameters.get("complexity", "medium")).lower()
                
        elif template_name == "reflection":
            # Import the reflection template module
            try:
                from src.mcps.deep_thinking.templates.reflection_template import get_reflection_template
                return get_reflection_template(parameters)
            except ImportError:
                # Fallback to a simple template if the module is not available
                topic = parameters.get("topic", "[topic]")
                thinking_history = parameters.get("thinking_history", "[thinking_history]")
                current_conclusions = parameters.get("current_conclusions", "[current_conclusions]")
                complexity_param = str(parameters.get("complexity", "medium")).lower()
                
                # Create a simple innovation template as fallback
                return f"""# 创新思维激发
                
**基础概念**: {concept}
**创新方向**: {direction}
**约束条件**: {constraints}
**思考方法**: {method}

请使用SCAMPER方法进行创新思考：

1. S - Substitute (替代)
2. C - Combine (结合)
3. A - Adapt (适应)
4. M - Modify (修改)
5. P - Put to Other Uses (其他用途)
6. E - Eliminate (消除)
7. R - Reverse/Rearrange (逆转/重组)

请开始创新思考："""
                
                # Convert complexity to Chinese
                if complexity_param in ["high", "高"]:
                    complexity = "高"
                    title = "深度思考：高级认知偏见检测"
                elif complexity_param in ["low", "低"]:
                    complexity = "低"
                    title = "深度思考：基础认知偏见检测"
                else:
                    complexity = "中等"
                    title = "深度思考：认知偏见检测"
                
                return f"""# {title}

请仔细分析以下内容中可能存在的认知偏见：

**分析内容**: {content}
**分析背景**: {context}
**分析复杂度**: {complexity}

## 常见认知偏见检查清单

### 🔍 确认偏误 (Confirmation Bias)
- 是否只寻找支持既有观点的信息？
- 是否忽略了相反的证据？
- 检测结果：存在/不存在，证据：

### ⚓ 锚定效应 (Anchoring Bias)
- 是否过度依赖最初获得的信息？
- 后续判断是否受到初始印象影响？
- 检测结果：存在/不存在，证据：

### 📊 可得性启发 (Availability Heuristic)
- 是否因为某些例子容易想起就认为更常见？
- 判断是否受到媒体报道频率影响？
- 检测结果：存在/不存在，证据：

### 🎯 代表性启发 (Representativeness Heuristic)
- 是否基于刻板印象进行判断？
- 是否忽略了基础概率？
- 检测结果：存在/不存在，证据：

### 💪 过度自信 (Overconfidence Bias)
- 对自己的判断是否过于确信？
- 是否低估了不确定性？
- 检测结果：存在/不存在，证据：

### 🔄 后见之明偏误 (Hindsight Bias)
- 是否认为结果"早就可以预见"？
- 是否重新解释了历史？
- 检测结果：存在/不存在，证据：

## 偏见缓解建议：
请针对检测到的偏见提供具体的缓解策略：
1. 
2. 
3. 

## 总体评估：
- 偏见风险等级：低/中/高
- 主要偏见类型：
- 改进优先级：

## JSON输出格式
```json
{
  "analysis_subject": "分析内容的简要描述",
  "analysis_context": "分析背景的简要描述",
  "bias_detection": {
    "confirmation_bias": {
      "detected": "true或false",
      "evidence": "证据描述",
      "mitigation": "缓解策略"
    },
    "anchoring_bias": {
      "detected": "true或false",
      "evidence": "证据描述",
      "mitigation": "缓解策略"
    }
  },
  "overall_assessment": {
    "risk_level": "偏见风险等级",
    "main_biases": ["主要偏见1", "主要偏见2"],
    "mitigation_strategies": ["缓解策略1", "缓解策略2"]
  }
}
```

请开始详细分析："""
        elif template_name == "critical_evaluation":
            # Use a simple template for critical evaluation
            content = parameters.get("content", "[content]")
            context = parameters.get("context", "[context]")
            complexity_param = str(parameters.get("complexity", "medium")).lower()
            
            # Convert complexity to Chinese
            if complexity_param in ["high", "高"]:
                complexity = "高"
            elif complexity_param in ["low", "低"]:
                complexity = "低"
            else:
                complexity = "中等"
            
            template = f"""# 深度思考：批判性评估

请基于Paul-Elder批判性思维标准评估以下内容：

**评估内容**: {content}
**评估背景**: {context}
**评估复杂度**: {complexity}

## Paul-Elder九大标准评估

### 1. 准确性 (Accuracy)
- 信息是否准确无误？
- 有无事实错误？
- 评分：1-10分，理由：

### 2. 精确性 (Precision)  
- 表述是否具体明确？
- 有无模糊不清之处？
- 评分：1-10分，理由：

### 3. 相关性 (Relevance)
- 内容是否与主题相关？
- 有无偏离核心问题？
- 评分：1-10分，理由：

### 4. 逻辑性 (Logic)
- 推理是否合乎逻辑？
- 有无逻辑谬误？
- 评分：1-10分，理由：

### 5. 广度 (Breadth)
- 是否考虑了多个角度？
- 视野是否足够宽广？
- 评分：1-10分，理由：

### 6. 深度 (Depth)
- 分析是否深入透彻？
- 是否触及根本问题？
- 评分：1-10分，理由：

### 7. 重要性 (Significance)
- 关注的是否为核心问题？
- 优先级是否合理？
- 评分：1-10分，理由：

### 8. 公正性 (Fairness)
- 是否存在偏见？
- 对不同观点是否公平？
- 评分：1-10分，理由：

### 9. 清晰性 (Clarity)
- 表达是否清晰易懂？
- 结构是否条理清楚？
- 评分：1-10分，理由：

## 总体评估
- 综合得分：___/90分
- 主要优势：
- 改进建议：
- 是否需要重新分析：是/否

请开始评估："""
            
            if complexity in ["high", "高"]:
                template = f"""# 深度思考：高级批判性评估

请基于Paul-Elder批判性思维标准对以下内容进行全面、深入的评估：

**评估内容**: {content}
**评估背景**: {context}
**评估复杂度**: 高

## Paul-Elder九大标准评估框架

### 1. 准确性 (Accuracy) - 权重: 12%
- **定义**: 信息是否符合事实，没有错误或失真
- **评分**: _/10分
- **详细理由**:
- **改进建议**:

### 2. 精确性 (Precision) - 权重: 12%
- **定义**: 表述是否具体、明确、详细，避免模糊和歧义
- **评分**: _/10分
- **详细理由**:
- **改进建议**:

### 3. 相关性 (Relevance) - 权重: 10%
- **定义**: 内容是否与主题直接相关，避免离题和不必要的信息
- **评分**: _/10分
- **详细理由**:
- **改进建议**:

### 4. 逻辑性 (Logic) - 权重: 12%
- **定义**: 推理过程是否合乎逻辑，避免谬误和矛盾
- **评分**: _/10分
- **详细理由**:
- **改进建议**:

### 5. 广度 (Breadth) - 权重: 10%
- **定义**: 是否考虑了多种观点和角度，避免狭隘视角
- **评分**: _/10分
- **详细理由**:
- **改进建议**:

### 6. 深度 (Depth) - 权重: 12%
- **定义**: 分析是否深入探讨了复杂性和根本问题，避免肤浅
- **评分**: _/10分
- **详细理由**:
- **改进建议**:

### 7. 重要性 (Significance) - 权重: 10%
- **定义**: 是否关注了最重要的问题和因素，正确设置优先级
- **评分**: _/10分
- **详细理由**:
- **改进建议**:

### 8. 公正性 (Fairness) - 权重: 12%
- **定义**: 是否客观公正地处理不同观点，避免偏见和预设立场
- **评分**: _/10分
- **详细理由**:
- **改进建议**:

### 9. 清晰性 (Clarity) - 权重: 10%
- **定义**: 表达是否清晰易懂，结构是否条理分明
- **评分**: _/10分
- **详细理由**:
- **改进建议**:

## 综合评估

### 加权总分计算
- 准确性: _/10 × 12% = _
- 精确性: _/10 × 12% = _
- 相关性: _/10 × 10% = _
- 逻辑性: _/10 × 12% = _
- 广度: _/10 × 10% = _
- 深度: _/10 × 12% = _
- 重要性: _/10 × 10% = _
- 公正性: _/10 × 12% = _
- 清晰性: _/10 × 10% = _

**加权总分**: _/10分

### 质量等级
- 9.0-10.0: 卓越 (Outstanding)
- 8.0-8.9: 优秀 (Excellent)
- 7.0-7.9: 良好 (Good)
- 6.0-6.9: 合格 (Satisfactory)
- 5.0-5.9: 需改进 (Needs Improvement)
- <5.0: 不合格 (Unsatisfactory)

**质量等级**: _

### 主要优势
1. 
2. 
3. 

### 主要不足
1. 
2. 
3. 

### 改进建议
1. 
2. 
3. 
4. 
5. 

### 是否需要重新分析
- [ ] 是，需要全面重新分析
- [ ] 是，需要部分修改和改进
- [ ] 否，质量已达到要求标准

## 输出验证检查清单
1. 是否对所有九个标准都进行了评分？
2. 评分理由是否具体且基于证据？
3. 改进建议是否具体可行？
4. 加权总分计算是否准确？
5. 是否提供了明确的质量等级判断？

请开始详细评估："""
            
            return template
        else:
            actual_template = template_name

        if actual_template not in self.cache:
            raise ConfigurationError(f"Template not found: {actual_template}")

        template_content = self.cache[actual_template]

        # Update usage stats
        with self.lock:
            if actual_template in self.metadata:
                self.metadata[actual_template]["usage_count"] += 1
                self.metadata[actual_template]["last_used"] = datetime.now()

        # Parameter substitution
        safe_params = {}
        for key, value in parameters.items():
            if isinstance(value, list):
                safe_params[key] = ", ".join(str(item) for item in value)
            else:
                safe_params[key] = str(value) if value is not None else ""

        # Check if template uses double braces format ({{var}})
        if "{{" in template_content:
            # Handle double braces format
            for key, value in safe_params.items():
                template_content = template_content.replace("{{" + key + "}}", value)
            
            # Find any remaining template variables
            remaining_vars = re.findall(r"\{\{(\w+)\}\}", template_content)
            
            # Provide defaults for missing variables
            for var in remaining_vars:
                template_content = template_content.replace("{{" + var + "}}", f"[{var}]")
                
            return template_content
        else:
            # Handle standard format with single braces
            # Find template variables
            template_vars = re.findall(r"\{(\w+)\}", template_content)

            # Provide defaults for missing variables
            for var in template_vars:
                if var not in safe_params:
                    safe_params[var] = f"[{var}]"

            try:
                return template_content.format(**safe_params)
            except Exception as e:
                print(f"Error formatting template: {e}")
                return template_content

    def list_templates(self) -> List[str]:
        """List all available templates"""
        return list(self.cache.keys())

    def add_template(self, template_name: str, template_content: str) -> None:
        """Add a new template"""
        self.cache[template_name] = template_content
        self.metadata[template_name] = {
            "builtin": False,
            "usage_count": 0,
            "last_used": None,
        }

    def get_usage_statistics(self) -> Dict[str, Any]:
        """Get usage statistics"""
        total_usage = sum(meta.get("usage_count", 0) for meta in self.metadata.values())

        return {"total_templates": len(self.cache), "total_usage": total_usage}
